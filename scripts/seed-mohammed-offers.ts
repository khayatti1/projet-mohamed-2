import { PrismaClient } from '@prisma/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Cr√©ation des offres pour Mohammed...');

  // Cr√©er une entreprise de test
  let company = await prisma.company.findFirst({
    where: { name: 'TechCorp Solutions' }
  });

  if (!company) {
    company = await prisma.company.create({
      data: {
        name: 'TechCorp Solutions',
        description: 'Entreprise sp√©cialis√©e dans le d√©veloppement logiciel et les solutions technologiques innovantes.',
        location: 'Rabat, Maroc',
        website: 'https://techcorp-solutions.ma'
      }
    });
  }

  // Cr√©er un recruteur de test
  const hashedPassword = await bcrypt.hash('password123', 10);
  let recruiter = await prisma.user.findUnique({
    where: { email: 'recruiter@techcorp.ma' }
  });

  if (!recruiter) {
    recruiter = await prisma.user.create({
      data: {
        name: 'Sarah Benali',
        email: 'recruiter@techcorp.ma',
        password: hashedPassword,
        role: 'RECRUITER',
        companyId: company.id
      }
    });
  }

  // Cr√©er le candidat Mohammed
  let mohammed = await prisma.user.findUnique({
    where: { email: 'khayatti.09@gmail.com' }
  });

  if (!mohammed) {
    mohammed = await prisma.user.create({
      data: {
        name: 'Mohammed El Khayati',
        email: 'khayatti.09@gmail.com',
        password: await bcrypt.hash('mohammed123', 10),
        role: 'CANDIDATE',
        cvUrl: '/api/uploads/cv-khayatti.pdf'
      }
    });
  } else {
    // Mettre √† jour le CV URL si l'utilisateur existe d√©j√†
    mohammed = await prisma.user.update({
      where: { id: mohammed.id },
      data: { cvUrl: '/api/uploads/cv-khayatti.pdf' }
    });
  }

  // Supprimer les anciennes offres et candidatures pour recommencer
  await prisma.technicalTest.deleteMany({
    where: {
      application: {
        candidate: { email: 'khayatti.09@gmail.com' }
      }
    }
  });

  await prisma.application.deleteMany({
    where: { candidateId: mohammed.id }
  });

  await prisma.jobOffer.deleteMany({
    where: { recruiterId: recruiter.id }
  });

  // Offre 1: Ing√©nieur Informatique (accept√©e)
  const jobOffer1 = await prisma.jobOffer.create({
    data: {
      title: 'Ing√©nieur Informatique - D√©veloppement Full Stack',
      description: `Nous recherchons un ing√©nieur informatique passionn√© pour rejoindre notre √©quipe de d√©veloppement.

**Responsabilit√©s :**
- D√©velopper des applications web avec React, Node.js et Python
- Concevoir et impl√©menter des bases de donn√©es SQL
- Collaborer avec l'√©quipe sur des projets innovants
- Maintenir et optimiser les applications existantes

**Comp√©tences requises :**
- Ma√Ætrise de JavaScript, Python, Java
- Exp√©rience avec React, Node.js
- Connaissance des bases de donn√©es SQL (PostgreSQL, MySQL)
- Familiarit√© avec Git et les m√©thodes agiles
- Capacit√© √† travailler en √©quipe

**Profil recherch√© :**
- Formation en g√©nie logiciel ou informatique
- Exp√©rience en d√©veloppement web
- Projets personnels ou acad√©miques d√©montrant vos comp√©tences`,
      requirements: 'JavaScript, Python, React, Node.js, SQL, Git, M√©thodes agiles',
      location: 'Rabat, Maroc',
      salary: '25000-35000 MAD',
      contractType: 'CDI',
      experienceLevel: 'Junior',
      skills: ['JavaScript', 'Python', 'React', 'Node.js', 'SQL', 'Git'],
      companyId: company.id,
      recruiterId: recruiter.id,
      isActive: true
    }
  });

  // Offre 2: Designer Graphique / Art Appliqu√© (refus√©e)
  const jobOffer2 = await prisma.jobOffer.create({
    data: {
      title: 'Designer Graphique - Art Appliqu√©',
      description: `Nous recherchons un designer cr√©atif sp√©cialis√© en art appliqu√© pour notre √©quipe marketing.

**Responsabilit√©s :**
- Cr√©er des designs pour supports print et digital
- D√©velopper l'identit√© visuelle de nos produits
- Collaborer avec l'√©quipe marketing sur les campagnes
- R√©aliser des illustrations et infographies

**Comp√©tences requises :**
- Ma√Ætrise d'Adobe Creative Suite (Photoshop, Illustrator, InDesign)
- Sens artistique et cr√©ativit√©
- Connaissance des tendances design
- Capacit√© √† respecter les d√©lais

**Profil recherch√© :**
- Formation en arts appliqu√©s, design graphique
- Portfolio d√©montrant vos cr√©ations
- Exp√©rience en agence ou en entreprise appr√©ci√©e`,
      requirements: 'Adobe Creative Suite, Design graphique, Arts appliqu√©s, Cr√©ativit√©, Portfolio',
      location: 'Casablanca, Maroc',
      salary: '18000-25000 MAD',
      contractType: 'CDI',
      experienceLevel: 'Junior',
      skills: ['Adobe Photoshop', 'Adobe Illustrator', 'Design Graphique', 'Arts Appliqu√©s'],
      companyId: company.id,
      recruiterId: recruiter.id,
      isActive: true
    }
  });

  // Candidature 1: Accept√©e avec test (Score √©lev√© pour ing√©nieur informatique)
  const application1 = await prisma.application.create({
    data: {
      jobOfferId: jobOffer1.id,
      candidateId: mohammed.id,
      status: 'TEST_COMPLETED',
      cvPath: '/api/uploads/cv-khayatti.pdf',
      coverLetter: 'Je suis tr√®s int√©ress√© par ce poste d\'ing√©nieur informatique qui correspond parfaitement √† ma formation et mes comp√©tences techniques.',
      aiScore: 85,
      cvScore: 85,
      aiAnalysis: JSON.stringify({
        score: 85,
        skills: ['JavaScript', 'Python', 'Java', 'SQL', 'React'],
        experience: 'Exp√©rience en d√©veloppement avec plusieurs projets acad√©miques et stages',
        education: 'Cycle d\'ing√©nieur en Informatique et R√©seaux √† l\'EMSI',
        projects: [
          'Application de gestion de taxis en ligne (Python Flask)',
          'Application de gestion d\'h√¥pital (C++)',
          'Site web de gestion de cabinet m√©dical (PHP)',
          'Clone Facebook (HTML, CSS, PHP)'
        ],
        languages: ['Arabe', 'Fran√ßais', 'Anglais', 'Allemand'],
        recommendations: [
          'Excellent profil technique correspondant au poste',
          'Formation solide en g√©nie logiciel',
          'Projets diversifi√©s d√©montrant les comp√©tences'
        ],
        experienceLevel: 'Junior'
      })
    }
  });

  // Candidature 2: Refus√©e (Score faible pour design graphique)
  const application2 = await prisma.application.create({
    data: {
      jobOfferId: jobOffer2.id,
      candidateId: mohammed.id,
      status: 'CV_REJECTED',
      cvPath: '/api/uploads/cv-khayatti.pdf',
      coverLetter: 'Je souhaite explorer de nouveaux domaines cr√©atifs et apporter mes comp√©tences techniques au design.',
      aiScore: 25,
      cvScore: 25,
      aiAnalysis: JSON.stringify({
        score: 25,
        skills: ['Programmation', 'D√©veloppement web'],
        experience: 'Exp√©rience principalement technique, peu d\'exp√©rience en design',
        education: 'Formation en g√©nie logiciel, pas en arts appliqu√©s',
        projects: [
          'Projets techniques mais pas de portfolio cr√©atif',
          'Aucun projet de design mentionn√©'
        ],
        languages: ['Arabe', 'Fran√ßais', 'Anglais'],
        recommendations: [
          'Profil technique ne correspondant pas au poste cr√©atif',
          'Manque d\'exp√©rience en design graphique',
          'Formation inad√©quate pour ce type de poste'
        ],
        experienceLevel: 'Junior'
      })
    }
  });

  // Cr√©er un test technique pour la candidature accept√©e
  const technicalTest = await prisma.technicalTest.create({
    data: {
      applicationId: application1.id,
      userId: mohammed.id,
      questions: JSON.stringify([
        {
          question: "Quelle est la diff√©rence entre '==' et '===' en JavaScript ?",
          options: [
            "Aucune diff√©rence",
            "=== compare le type et la valeur, == compare seulement la valeur",
            "== est plus rapide que ===",
            "=== est obsol√®te"
          ],
          correctAnswer: 1
        },
        {
          question: "Qu'est-ce que le DOM en d√©veloppement web ?",
          options: [
            "Document Object Model",
            "Data Object Management",
            "Dynamic Object Method",
            "Database Object Model"
          ],
          correctAnswer: 0
        },
        {
          question: "Quel est le r√¥le principal de React ?",
          options: [
            "G√©rer les bases de donn√©es",
            "Cr√©er des interfaces utilisateur",
            "G√©rer les serveurs",
            "Compiler le code"
          ],
          correctAnswer: 1
        },
        {
          question: "Qu'est-ce qu'une API REST ?",
          options: [
            "Un type de base de donn√©es",
            "Un langage de programmation",
            "Une architecture pour les services web",
            "Un framework JavaScript"
          ],
          correctAnswer: 2
        },
        {
          question: "Quelle commande Git permet de cr√©er une nouvelle branche ?",
          options: [
            "git new branch",
            "git create branch",
            "git branch nom-branche",
            "git make branch"
          ],
          correctAnswer: 2
        },
        {
          question: "Qu'est-ce que SQL ?",
          options: [
            "Structured Query Language",
            "Simple Query Language",
            "Standard Query Language",
            "System Query Language"
          ],
          correctAnswer: 0
        },
        {
          question: "Quel est l'avantage principal des m√©thodes agiles ?",
          options: [
            "Code plus rapide",
            "Moins de bugs",
            "Flexibilit√© et adaptation au changement",
            "Interface plus belle"
          ],
          correctAnswer: 2
        },
        {
          question: "Qu'est-ce que Node.js ?",
          options: [
            "Un framework CSS",
            "Un environnement d'ex√©cution JavaScript c√¥t√© serveur",
            "Une base de donn√©es",
            "Un √©diteur de code"
          ],
          correctAnswer: 1
        },
        {
          question: "Quelle est la fonction principale d'un ORM ?",
          options: [
            "Optimiser les images",
            "Mapper les objets aux tables de base de donn√©es",
            "G√©rer les utilisateurs",
            "Cr√©er des interfaces"
          ],
          correctAnswer: 1
        },
        {
          question: "Qu'est-ce que le responsive design ?",
          options: [
            "Design qui r√©pond aux utilisateurs",
            "Design qui s'adapte √† diff√©rentes tailles d'√©cran",
            "Design avec des animations",
            "Design color√©"
          ],
          correctAnswer: 1
        }
      ]),
      answers: JSON.stringify([1, 0, 1, 2, 2, 0, 2, 1, 1, 1]), // 8/10 bonnes r√©ponses
      score: 80,
      completedAt: new Date()
    }
  });

  console.log('‚úÖ Donn√©es cr√©√©es avec succ√®s !');
  console.log(`üìä Entreprise: ${company.name}`);
  console.log(`üë§ Recruteur: ${recruiter.name} (${recruiter.email})`);
  console.log(`üéØ Candidat: ${mohammed.name} (${mohammed.email})`);
  console.log(`üíº Offre 1: ${jobOffer1.title} - Candidature accept√©e (Score: 85%)`);
  console.log(`üé® Offre 2: ${jobOffer2.title} - Candidature refus√©e (Score: 25%)`);
  console.log(`üìù Test technique: 8/10 bonnes r√©ponses (Score: 80%)`);

  // Afficher les informations d√©taill√©es des postes
  console.log('\nüìã INFORMATIONS D√âTAILL√âES DES POSTES:');
  console.log('\nüîß POSTE 1: ING√âNIEUR INFORMATIQUE');
  console.log('='.repeat(50));
  console.log(`Titre: ${jobOffer1.title}`);
  console.log(`Entreprise: ${company.name}`);
  console.log(`Localisation: ${jobOffer1.location}`);
  console.log(`Salaire: ${jobOffer1.salary}`);
  console.log(`Type de contrat: ${jobOffer1.contractType}`);
  console.log(`Niveau d'exp√©rience: ${jobOffer1.experienceLevel}`);
  console.log(`Comp√©tences requises: ${jobOffer1.skills?.join(', ')}`);
  console.log(`Status candidature Mohammed: ‚úÖ ACCEPT√âE (Score IA: 85%)`);
  console.log(`Test technique: ‚úÖ COMPL√âT√â (Score: 80%)`);

  console.log('\nüé® POSTE 2: DESIGNER GRAPHIQUE');
  console.log('='.repeat(50));
  console.log(`Titre: ${jobOffer2.title}`);
  console.log(`Entreprise: ${company.name}`);
  console.log(`Localisation: ${jobOffer2.location}`);
  console.log(`Salaire: ${jobOffer2.salary}`);
  console.log(`Type de contrat: ${jobOffer2.contractType}`);
  console.log(`Niveau d'exp√©rience: ${jobOffer2.experienceLevel}`);
  console.log(`Comp√©tences requises: ${jobOffer2.skills?.join(', ')}`);
  console.log(`Status candidature Mohammed: ‚ùå REFUS√âE (Score IA: 25%)`);
  console.log(`Raison: Profil technique ne correspondant pas au poste cr√©atif`);
}

main()
  .catch((e) => {
    console.error('‚ùå Erreur:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
